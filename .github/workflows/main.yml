
name: CI
env:
  NODE_VERSION: '22.x'   # set this to the node version to use

# Controls when the action will run. 
on:
  # Triggers the workflow on push for the master branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: main
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Build
      run: |
        cd ui
        npm install
        npm run build:prod
        cd ../
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Set AWS S3 Bucket Values from Stack Output
      run: echo "S3_BUCKET=$(aws cloudformation describe-stacks --stack-name ${{ vars.STACK_NAME }} --output json | jq -r '.Stacks[].Outputs[] | select(.OutputKey == "S3Bucket") | .OutputValue')" >> $GITHUB_ENV

    - name: Sync build output with bucket
      run: aws s3 sync ui/build/ s3://$S3_BUCKET

    - name: Set AWS CloudFront Distribution from Stack Output
      run: echo "CLOUDFRONT_DISTRIBUTION=$(aws cloudformation describe-stacks --stack-name ${{ vars.STACK_NAME }} --output json | jq -r '.Stacks[].Outputs[] | select(.OutputKey == "CloudFrontDistribution") | .OutputValue')" >> $GITHUB_ENV

    - name: Invalidate cache
      run: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION --paths "/*"
